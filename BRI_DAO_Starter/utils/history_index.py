from skyfield.api import load
from datetime import datetime
import os

# –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
HISTORY_DIR = "docs/history"

# –ó–∞–≥—Ä—É–∂–∞–µ–º —ç—Ñ–µ–º–µ—Ä–∏–¥—ã
planets = load('data/de440s.bsp')
ts = load.timescale()
t = ts.now()

planet_names = {
    'Sun': '–°–æ–ª–Ω—Ü–µ',
    'Moon': '–õ—É–Ω–∞',
    'Mercury': '–ú–µ—Ä–∫—É—Ä–∏–π',
    'Venus': '–í–µ–Ω–µ—Ä–∞',
    'Mars': '–ú–∞—Ä—Å',
    'Jupiter': '–Æ–ø–∏—Ç–µ—Ä',
    'Saturn': '–°–∞—Ç—É—Ä–Ω',
    'Uranus': '–£—Ä–∞–Ω',
    'Neptune': '–ù–µ–ø—Ç—É–Ω',
    'Pluto': '–ü–ª—É—Ç–æ–Ω',
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
def get_positions():
    earth = planets['earth']
    result = []
    for name in planet_names:
        planet = planets[name]
        astrometric = earth.at(t).observe(planet)
        ecl = astrometric.ecliptic_latlon()
        deg = ecl[1].degrees % 360
        result.append((planet_names[name], round(deg, 2)))
    return result

# –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
def format_report():
    lines = ["# –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç –∑–∞ " + t.utc_strftime('%Y-%m-%d'), "", "_(–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ)_", ""]
    lines.append("## üåå –ü–æ–ª–æ–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç:")
    lines.append("")
    for name, deg in get_positions():
        lines.append(f"- **{name}**: {deg}¬∞")
    lines.append("")
    lines.append(f"_–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {datetime.utcnow().isoformat()} UTC_")
    return "\n".join(lines)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
def save_history_file():
    date_str = t.utc_strftime('%Y-%m-%d')
    filename = os.path.join(HISTORY_DIR, f"{date_str}.md")
    if not os.path.exists(HISTORY_DIR):
        os.makedirs(HISTORY_DIR)
    with open(filename, "w", encoding="utf-8") as f:
        f.write(format_report())
    print(f"‚úÖ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    save_history_file()
